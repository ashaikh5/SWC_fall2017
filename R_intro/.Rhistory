SWC_fall2017
setwd("~/Desktop/SWC_fall2017/R_intro")
3+5
sqrt(64)
sqrt(64)
print("Wow")
print(64)
install.packages("knitr")
library(knitr)
?print
help(mean)
#variable
name <- "Jane"
name
price <- 3.99
price
print(price)
mass <- 47.5
ls()
?ls
rm(name)
ls()
rm(list=ls())
res <- sqrt(64)
res
age <- 45
length(age)
str(age)
?str
typeof(age)
score <- 79
score
is.integer(score)
typeof(is.integer(score))
#how to create a multi-element variable
v <- c(1:10)
v
length(v)
str(v)
head(v, n=2)
tail(v, n=3)
#manipulate
v<- c(v, 56)
v
v1 <- v*2
v1
#change a data type
v2 <- as.character(v1)
v2
#matrices
m <- matrix(c(1:18))
#matrices
m <- matrix(c(1:18), 3, 6)
m
dim(m)
#factor
f <- factor(c("M", "F", "F"))
f
str(f)
#list
l <- list("Afghanistan", 1952, 86769)
l
str(l)
length(l)
item <- c(chicken, salad, soup, tea)
name <- c(chicken, salad, soup, tea)
menu <- c(chicken, salad, soup, tea)
?list
menu <- c("chicken", "salad", "soup", "tea")
state <- c("sold", "solid", "liquid", "liquid")
cost <- c(4.99, 2.99, 3.29, 1.89)
my.order <- ls("menu", "state", "cost")
my.order <- list("menu", "state", "cost")
my.order
my.order <- list(menu, state, cost)
my.order
state <- factor(c("sold", "solid", "liquid", "liquid"))
my.order
length(my.order)
str(my.order)
my.order
state <- factor(c("sold", "solid", "liquid", "liquid"))
str(my.order)
length(menu)
length(state)
length(cost)
my.order_df <- data.frame(menu, state, cost)
my.order_df
### Subsetting
### By Position Index
v <- c(10:20)
v
v[7]
v[7:10]
v[-c(7:10)]
my.order[1]
my.order_df[3,3]
my.order_df[,3]
my.order_df[3]
my.order_df$menu
v <- c(2,3,4,5,6,5,6)
v1 <- v[v==5]
v1
v1 <- v[v<4]
v1
df1 <- my.order_df[my.order_df$menu == "liquid"]
df1
df1 <- my.order_df[my.order_df$menu == "liquid",]
df1
df2 <- my.order_df[my.order_df$cost<3,]
df2
my.order_df$state == "liquid"
myData <- read.table("gopminder.txt", header = T)
myData <- read.table("gapminder.txt", header = T)
myData <- read.table("gapminder.txt", header = TRUE)
setwd("~/Desktop/SWC_fall2017/Data")
myData <- read.table("gapminder.txt", header = TRUE)
myData
my.order_df$menu == "liquid"
head(myData)
read.csv("path_to_the_file")
dim(myData)
str(myData)
myData[1,]
myData[1]
myData[1,]
myData[,3:5]
myData[,3+5]
myData
life <- myData[,4]
life
l <- myData[myData$lifeExp<70]
l <- myData[myData$lifeExp<70,]
l
myData
pop.mil <- myData[myData$pop/1000000]
myData[,5]/1000000
pop.mil <- myData[,5]/1000000
myData[,7==pop.mil]
myData[,c(3,5)]
typeof(myData)
unique(myData$country)
unique(myData$country) or unique(myData[,1])
myData$pop.mil <- myData[,5]/1000000
plot(Canada$year, Canada$lifeExp, col = "blue", type = "l")
# Extracting only the country Canada
Canada <- myDataFull[myDataFull$country == "Canada",]
myDataFull <- read.table("gapminder.txt", header = TRUE)
# Extracting only the country Canada
Canada <- myDataFull[myDataFull$country == "Canada",]
plot(Canada$year, Canada$lifeExp, col = "blue", type = "l")
## Open the file
png(Canada.png)
## Open the file
png("Canada.png")
## Open the file
png("Canada.png")
# Closew the device
dev.off()
setwd("~/Desktop/SWC_fall2017/Data")
setwd("~/Desktop/SWC_fall2017/R_intro")
## Open the file
png("Canada.png")
plot(Canada$year, Canada$lifeExp, col = "blue", type = "l")
# Closew the device
dev.off()
